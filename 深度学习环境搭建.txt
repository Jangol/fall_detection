#*************************************************************
#Caffe + Ubuntu 14.04 64bit + CUDA 7.5 + cuDNN v4 + opencv3.0.0
#*************************************************************
#注意：（1）opencv3.0以下版本和CUDA7.0以上版本不兼容；
#      （2）Ubuntu系统装好后，更换软件下载源，本文档选择aliyun的软件源；
      
##1.Ubuntu系统的安装（省略）

##2.CUDA7.5

  ###2.1 CUDA安装

    （1）下载CUDA的.deb文件，到NVIDIA官根据自己的系统下载对应版本   
    （2）在/home文件下新建一个软件安装的文件夹（eg：deeplearning），把下载的.deb文件放
    到deeplearning文件中，切换命令终端路径到deeplearning，执行：   
        $ sudo dpkg -i cuda_XXX.deb
        $ sudo apt-get update
        $ sudo apt-get install cuda  
    （3）重启电脑，Ubuntu系统装好后，一般分辨率会不正常，安装完CUDA后，分辨率正常了，
    基本CUDA就装好了  
    （4）如果不成，少折腾，重装系统，再来过；
    
  ###2.2 设置环境变量：
    设置环境变量时，首先确定好cuda安装路径和位置，这一步非常重要，在安装时不需要对下面
    位置进行修改，系统会自动建立连接

    在/etc/profile中添加CUDA环境变量
        $ sudo gedit /etc/profile
    添加内容：
        export PATH=/usr/local/cuda/bin:$PATH  
    保存后, 执行下列命令, 使环境变量立即生效
        $ source /etc/profile
    同时需要添加lib库路径： 在 /etc/ld.so.conf.d/新建文件 cuda.conf,       
		$ cd /etc/ld.so.conf.d
		$ sudo touch cuda.conf
		$ sudo gedit cuda.conf
	添加内容如下:/usr/local/cuda/lib64,保存后，执行下列命令使之立刻生效
        $ sudo ldconfig

##3.安装cuDNN
    
    （1）下载cuDNN，CUDA7.0以上版本，cuDNN最好用v3以上版本，本文档为最新的cnDNN v4版本;
    （2）把下载的cuDNN压缩包放到deeplearning文件夹中;
    解压文件：
        $ tar -zxvf cudnn-***.tgz
    进入解压文件：
        $ cd ***
    复制相应文件到CUDA安装路径：
        $ sudo cp lib64/lib* /usr/local/cuda/lib64
        $ sudo cp include/cudnn.h /usr/local/cuda/include
    切换路径到：/usr/local/cuda/lib64
		$ cd /usr/local/cuda/lib64
		$ sudo chmod 777 libcudnn.so.4.0.7 -R
		$ sudo ln -sf libcudnn.so.4.0.7 libcudnn.so.4
		$ sudo ln -sf libcudnn.so.4 libcudnn.so
		$ sudo ldconfig
        
##4.安装opencv

    ###4.1傻瓜式安装:
     下载好软件包，和相应的安装脚本就可以了。（opencv.sh）
     把opencv压缩包和opencv.sh放到deeplearning文件中，执行opencv.sh脚本就可以了
     
    ###4.2手动安装：
    （1）$sudo apt-get remove ffmpeg x264 libx264-dev（新装系统这步省略）
    （2）$sudo apt-get -qq install libopencv-dev build-essential checkinstall cmake pkg-config yasm libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy libtbb-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils（依赖很多，最好一次少装几个，确保都装上了）
    （3）安装ffmpeg:
        $ sudo add-apt-repository ppa:mc3man/trusty-media
        $ sudo apt-get update
        $ sudo apt-get install ffmpeg gstreamer0.10-ffmpeg
    （4）解压OpenCV包后:
        $ mkdir build
        $ cd build
    （5）$ cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D       BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..
    （6）$ make -j8
    （7）$ make install
    （8）$ sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
    （9）$ ldconfig
     
##5.Python安装，实际是caffe需要的Python库的安装（不建议搞anacoda pyhon ,路径很容易出错）

    （1）下载好caffe文件；
    （2）安装pip
        $ sudo apt-get install python-pip
    （3）安装caffe需要的Python库，切换到caffe/python路径下：
        $ sudo apt-get install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose   
        $ for req in $(cat requirements.txt); do pip install $req; done

##6.安装caffe

    （1）安装BLAS：
		$ sudo apt-get install libatlas-base-dev
    （2）各种依赖：
		$ sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev protobuf-compiler liblmdb-dev libgflags-dev libgoogle-glog-dev（10个）
    （3）修改编译配置文件
		$ cp Makefile.config.example Makefile.config
            i) 使用cuDNN
            # USE_CUDNN := 1 
            这里去掉#，取消注释
            USE_CUDNN := 1 
    （4）编译caffe
        $ make all -j8 && make test -j8 && make runtest -j8 && make pycaffe -j8
        
    （5）顺利编译完成后，测试
        caffe自带例程，在caffe的根目录下：
        $ ./data/mnist/get_mnist.sh
        $ ./examples/mnist/create_mnist.sh
        $ ./examples/mnist/train_lenet.sh
        
    （6）测试python接口
        $ sudo gedit /etc/profile
    	添加内容：export PYTHONPATH=/home/gnss/deeplearning/caffe-xxx/python:$PYTHONPATH  
		$ source /etc/profile
        $ python
        $ import caffe
        不报错则表示python接口编译成功
        
        
